bool isPossibleSolution(int n ,int m ,vector<int> time,long long int mid){
    int daysCount = 1;
    long long  int chapterSum = 0;
     for(int i =0; i<m;i++){
        if(chapterSum+time[i]<=mid){
            chapterSum = chapterSum + time[i];
        } 
         else {
             daysCount++;
             if(daysCount>n||time[i]>mid){
                 return false;
             }
             chapterSum = time[i];
         }
     }
    return true;
}
long long ayushGivesNinjatest(int n, int m, vector<int> time) 
{	
   long long int s = 0;
   long long int sum =0;
   long long int ans = -1;
    for(int i =0;i<m;i++){
       sum = sum + time[i]; 
    }
   long long int e = sum;
   long long int mid = s + (e-s)/2;
    while(s<=e){
        if(isPossibleSolution(n,m,time,mid)){
           ans = mid;
            e = mid-1;
        }
        else {
            s = mid + 1;
        }
         mid = s + (e-s)/2;
    }
    return ans;
}
